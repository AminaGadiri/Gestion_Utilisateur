// <auto-generated />
using System;
using Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BiblioDBContext))]
    partial class BiblioDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Modeles.Role", b =>
            {
                b.Property<Guid>("RoleId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnType("nvarchar(15)");

                b.HasKey("RoleId");

                b.ToTable("Roles");
            });

            modelBuilder.Entity("Domain.Modeles.RoleUtilisateur", b =>
            {
                b.Property<Guid>("RoleUtisateurId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("RoleId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("UtilisateurId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("RoleUtisateurId");

                b.HasIndex("RoleId");

                b.HasIndex("UtilisateurId");

                b.ToTable("RoleUtilisateurs");
            });

            modelBuilder.Entity("Domain.Modeles.Utilisateur", b =>
            {
                b.Property<Guid>("UtilisateurId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Adresse")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Ecole")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<bool>("JobInTech")
                    .HasColumnType("bit");

                b.Property<string>("Nom")
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnType("nvarchar(15)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Prenom")
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnType("nvarchar(15)");

                b.HasKey("UtilisateurId");

                b.ToTable("Utilisateurs");
            });



            modelBuilder.Entity("Domain.Modeles.RoleUtilisateur", b =>
            {
                b.HasOne("Domain.Modeles.Role", "Role")
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Domain.Modeles.Utilisateur", "Utilisateur")
                    .WithMany()
                    .HasForeignKey("UtilisateurId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Role");

                b.Navigation("Utilisateur");
            });


#pragma warning restore 612, 618
        }
    }
}
